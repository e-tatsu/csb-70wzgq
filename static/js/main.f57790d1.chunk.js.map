{"version":3,"sources":["components/providers/DateProvider.jsx","components/providers/DayDataProvider.jsx","firebase.js","components/modalComponents/EditModal.jsx","components/modalComponents/AddModal.jsx","components/DayBar.jsx","components/Modal.jsx","components/Header.jsx","App.jsx","index.js"],"names":["DateContext","createContext","DateProviders","props","children","useState","Date","targetValue","setTargetValue","Provider","value","DayDataContext","DayDataProvider","dayData","setDayData","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","EditModal","useContext","isEditModalOpen","useEffect","usersCollectionRef","collection","getDocs","then","querySnapshot","docs","filter","doc","data","date","map","id","deleteAchieve","a","userDocumentRef","deleteDoc","alert","className","Object","keys","length","achieve","lang","book","field","unknown","time","Button","type","onClick","variant","color","AddModal","selectedVal","setSelectedVal","selectedTime","setSelectedTime","selectedBook","setSelectedBook","isAddModalOpen","setIsAddModalOpen","sendAchieve","event","preventDefault","target","elements","undefined","addDoc","onSubmit","style","display","justifyContent","marginTop","options","label","onChange","Val","alignItems","name","placeholder","width","maxWidth","height","DayBar","pieData","labels","datasets","backgroundColor","borderColor","borderWidth","push","margin","scales","xAxes","scaleLabel","labelString","yAxes","ticks","beginAtZero","callback","index","values","Modal","isModalOpen","setIsModalOpen","setIsEditModalOpen","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","AppBar","position","marginBottom","Toolbar","Typography","App","nextValue","changeDate","moment","format","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f57790d1.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const DateContext = createContext({});\r\n\r\nexport default function DateProviders(props) {\r\n  const { children } = props;\r\n  const [targetValue, setTargetValue] = useState(new Date());\r\n  return (\r\n    <DateContext.Provider value={{ targetValue, setTargetValue }}>\r\n      {children}\r\n    </DateContext.Provider>\r\n  );\r\n}\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const DayDataContext = createContext({});\r\n\r\nexport function DayDataProvider(props) {\r\n  const { children } = props;\r\n  const [dayData, setDayData] = useState([]);\r\n  return (\r\n    <DayDataContext.Provider value={{ dayData, setDayData }}>\r\n      {children}\r\n    </DayDataContext.Provider>\r\n  );\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDRCg3Uw_xE7l_B8LQpDbD5SHxMHQ3uxVM\",\r\n  authDomain: \"react-db-bd797.firebaseapp.com\",\r\n  projectId: \"react-db-bd797\",\r\n  storageBucket: \"react-db-bd797.appspot.com\",\r\n  messagingSenderId: \"667093757319\",\r\n  appId: \"1:667093757319:web:3451113f7870d32d897722\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();\r\n//export const storage = getStorage();\r\n\r\nexport default app;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { DateContext } from \"../providers/DateProvider\";\r\nimport { DayDataContext } from \"../providers/DayDataProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, deleteDoc, doc } from \"firebase/firestore\";\r\nimport \"../../styles/modal.css\";\r\n\r\nexport default function EditModal(props) {\r\n  const { targetValue } = useContext(DateContext);\r\n  const { dayData, setDayData } = useContext(DayDataContext);\r\n  const { isEditModalOpen } = props;\r\n  // /* データ取得:FireBaseで管理しているデータを取得　*/\r\n  /* 条件:選択した日付のデータ(targetValue)と同じ日付のデータ */\r\n  useEffect(() => {\r\n    const usersCollectionRef = collection(db, \"users\");\r\n    getDocs(usersCollectionRef).then((querySnapshot) => {\r\n      /* 学習データオブジェクトをdayDataに格納 */\r\n      setDayData(\r\n        querySnapshot.docs\r\n          .filter((doc) => doc.data().date === targetValue)\r\n          .map((doc) => ({ ...doc.data(), id: doc.id }))\r\n      );\r\n    });\r\n  }, [targetValue, setDayData]);\r\n  /* 関数：学習データの削除処理 */\r\n  const deleteAchieve = async (id) => {\r\n    const userDocumentRef = doc(db, \"users\", id);\r\n    await deleteDoc(userDocumentRef);\r\n    alert(\"削除しました\");\r\n  };\r\n  return (\r\n    <div>\r\n      {/* propsで取得した値(Modal.jsxにおける表示押下時)によって分岐 */}\r\n      {/* isEditModalOpenがTrueの場合：学習一覧表示 */}\r\n      {/* isEditModalOpenがFlaseの場合：なにも表示しない */}\r\n      {isEditModalOpen ? (\r\n        <div>\r\n          <h3>学習一覧</h3>\r\n          <div className=\"modal-container-edit\">\r\n            {/* データ取得時、データが存在しない場合に表示 */}\r\n            {!Object.keys(dayData).length ? (\r\n              <div>\r\n                <h4>データがありません。</h4>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {dayData.map((achieve) => (\r\n              <div key={achieve.id} className=\"modal-container-edit-elements\">\r\n                <ul>\r\n                  <li>言語　：　{achieve.lang}</li>\r\n                  <li>教材　：　{achieve.book}</li>\r\n                  <li>分野　：　{achieve.field}</li>\r\n                  <li>不明点：　{achieve.unknown}</li>\r\n                  <li>時間　：　{achieve.time}分</li>\r\n                </ul>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={() => deleteAchieve(achieve.id)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"modal-container-edit-buttonDelete\"\r\n                >\r\n                  削除\r\n                </Button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useContext } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { DateContext } from \"../providers/DateProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function AddModal(props) {\r\n  const [selectedVal, setSelectedVal] = useState(\"\"); //選択した言語を状態管理\r\n  const [selectedTime, setSelectedTime] = useState(\"\"); //選択した時間を状態管理\r\n  const [selectedBook, setSelectedBook] = useState(\"\"); //選択した教材を状態管理\r\n  const { targetValue } = useContext(DateContext);\r\n  const { isAddModalOpen, setIsAddModalOpen } = props;\r\n  /* 関数:FireBaseに学習データをインサートする処理 */\r\n  const sendAchieve = async (event) => {\r\n    event.preventDefault();\r\n    const { field, unknown } = event.target.elements;\r\n    if (\r\n      selectedVal.value === undefined ||\r\n      selectedTime.value === undefined ||\r\n      field.value === \"\"\r\n    ) {\r\n      alert(\"値を入れてください。\");\r\n    } else {\r\n      setIsAddModalOpen(false);\r\n      alert(\"登録しました！\");\r\n      const usersCollectionRef = collection(db, \"users\");\r\n      const documentRef = await addDoc(usersCollectionRef, {\r\n        lang: selectedVal.value, //言語\r\n        book: selectedBook.value, //教材\r\n        field: field.value, //分野\r\n        unknown: unknown.value, //不明点\r\n        time: selectedTime.value, //時間\r\n        date: targetValue\r\n      });\r\n    }\r\n  };\r\n  /* 選択データ */\r\n  const langData = [\r\n    { value: \"Java\", label: \"Java\" },\r\n    { value: \"React.js\", label: \"React.js\" },\r\n    { value: \"firebase\", label: \"firebase\" },\r\n    { value: \"Vue.js\", label: \"Vue.js\" },\r\n    { value: \"Next.js\", label: \"Next.js\" }\r\n  ];\r\n  const textBookData = [\r\n    { value: \"黒本\", label: \"黒本\" },\r\n    { value: \"紫本\", label: \"紫本\" },\r\n    { value: \"白本\", label: \"白本\" },\r\n    { value: \"その他\", label: \"その他\" }\r\n  ];\r\n  const timeData = [\r\n    { value: 30, label: \"30分\" },\r\n    { value: 60, label: \"60分\" },\r\n    { value: 90, label: \"1時間30分\" },\r\n    { value: 120, label: \"2時間\" },\r\n    { value: 180, label: \"3時間\" },\r\n    { value: 240, label: \"4時間\" },\r\n    { value: 300, label: \"5時間\" },\r\n    { value: 360, label: \"6時間\" }\r\n  ];\r\n  /* 関数:選択した言語を状態管理 */\r\n  const addValue = (Val) => {\r\n    setSelectedVal(Val);\r\n  };\r\n  const addBook = (Val) => {\r\n    setSelectedBook(Val);\r\n  };\r\n  /* 関数:選択した時間を状態管理 */\r\n  const addTime = (Val) => {\r\n    setSelectedTime(Val);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* propsで取得した値(Modal.jsxにおける表示押下時)によって分岐 */}\r\n      {/* isAddModalOpenがTrueの場合：学習一覧表示 */}\r\n      {/* isAddModalOpenがFlaseの場合：なにも表示しない */}\r\n      {isAddModalOpen ? (\r\n        <div className=\"modal-container-add\">\r\n          <h3>学習追加</h3>\r\n          <form onSubmit={sendAchieve}>\r\n            <div>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <label style={{ marginTop: \"7px\" }}>言語：</label>\r\n                <Select options={langData} onChange={addValue} />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"12px\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <label style={{ marginTop: \"7px\" }}>教材：</label>\r\n                <Select options={textBookData} onChange={addBook} />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"12px\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <label>分野：</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"field\"\r\n                  placeholder=\"基礎文法\"\r\n                  style={{\r\n                    width: \"60%\",\r\n                    maxWidth: \"108px\",\r\n                    height: \"35px\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"12px\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <label>不明点：</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"unknown\"\r\n                  placeholder=\"継承\"\r\n                  style={{\r\n                    width: \"60%\",\r\n                    maxWidth: \"108px\",\r\n                    height: \"35px\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"12px\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <label style={{ marginTop: \"7px\" }}>時間：</label>\r\n                <Select options={timeData} onChange={addTime} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"modal-container-add-buttonAdd\"\r\n              >\r\n                登録\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          {/*<Button\r\n            onClick={closeAddModal}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"modal-container-open-buttonReturn\"\r\n          >\r\n            戻る\r\n          </Button>*/}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Bar } from \"react-chartjs-2\";\r\n\r\nexport default function DayBar(props) {\r\n  const { dayData, isEditModalOpen } = props;\r\n  const pieData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"DataSet\",\r\n        data: [],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n          \"rgba(255, 205, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(201, 203, 207, 0.2)\"\r\n        ],\r\n        borderColor: [\r\n          \"rgb(255, 99, 132)\",\r\n          \"rgb(255, 159, 64)\",\r\n          \"rgb(255, 205, 86)\",\r\n          \"rgb(75, 192, 192)\",\r\n          \"rgb(54, 162, 235)\",\r\n          \"rgb(153, 102, 255)\",\r\n          \"rgb(201, 203, 207)\"\r\n        ],\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n  const graphOption = {\r\n    scales: {\r\n      xAxes: [\r\n        // x軸設定\r\n        {\r\n          scaleLabel: {\r\n            // 軸ラベル設定\r\n            display: true,\r\n            labelString: \"言語\"\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        // y軸設定\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"勉強時間\"\r\n          },\r\n          ticks: {\r\n            // 軸目盛設定\r\n            beginAtZero: true,\r\n            callback: function (value, index, values) {\r\n              return `${value}(分)`;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  dayData.map((dayData) => {\r\n    pieData.labels.push(dayData.lang);\r\n    pieData.datasets[0].data.push(dayData.time);\r\n  });\r\n  return (\r\n    <div style={{ maxWidth: \"100%\", width: \"600px\", margin: \"0 auto\" }}>\r\n      {isEditModalOpen ? (\r\n        <div>\r\n          <p>学習成果（日）</p>\r\n          <Bar data={pieData} options={graphOption} />\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import EditModal from \"./modalComponents/EditModal\";\r\nimport AddModal from \"./modalComponents/AddModal\";\r\nimport DayBar from \"../components/DayBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { DateContext } from \"./providers/DateProvider\";\r\nimport { DayDataContext } from \"../components/providers/DayDataProvider\";\r\nimport { useContext, useState } from \"react\";\r\nimport \"../styles/modal.css\";\r\n\r\nexport default function Modal(props) {\r\n  const { isModalOpen, setIsModalOpen } = props;\r\n  const { targetValue } = useContext(DateContext); //押下した日付の状態管理(YYYY-MM-DD)\r\n  const { dayData } = useContext(DayDataContext); //日付に格納されている学習データの状態管理\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false); //学習一覧モーダルの表示・非表示の状態管理\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false); //学習追加モーダルの表示・非表示の状態管理\r\n\r\n  /* 関数：モーダル・ボタン・円グラフの状態変更処理 */\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setIsEditModalOpen(false);\r\n    setIsAddModalOpen(false);\r\n  };\r\n  /* 関数：学習一覧、棒グラフのモーダル表示処理 */\r\n  const openEditModal = () => {\r\n    if (isAddModalOpen) setIsAddModalOpen(false);\r\n    setIsEditModalOpen(true);\r\n  };\r\n  /* 関数：学習追加のモーダル表示処理 */\r\n  const openAddModal = () => {\r\n    if (isEditModalOpen) {\r\n      setIsEditModalOpen(false);\r\n    }\r\n    setIsAddModalOpen(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* propsで取得した値(App.jsxにおける日付押下時)によって分岐 */}\r\n      {/* isModalOpenがTrueの場合：表示・追加ボタン画面表示 */}\r\n      {/* isModalOpenがFlaseの場合：なにも表示しない */}\r\n      {isModalOpen ? (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-container-open\">\r\n            <div>\r\n              <h4>選択した日付：{targetValue}</h4>\r\n              {/* 学習一覧モーダルの表示ボタン */}\r\n              <Button\r\n                onClick={openEditModal}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"modal-container-open-buttonEdit\"\r\n              >\r\n                表示\r\n              </Button>\r\n              {/* 学習追加モーダルの表示ボタン */}\r\n              <Button\r\n                onClick={openAddModal}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"modal-container-open-buttonAdd\"\r\n              >\r\n                追加\r\n              </Button>\r\n              {/* 学習一覧モーダル */}\r\n              <EditModal\r\n                isEditModalOpen={isEditModalOpen}\r\n                setIsEditModalOpen={setIsEditModalOpen}\r\n              />\r\n              {/* 学習追加モーダル */}\r\n              <AddModal\r\n                isAddModalOpen={isAddModalOpen}\r\n                setIsAddModalOpen={setIsAddModalOpen}\r\n              />\r\n            </div>\r\n            <DayBar dayData={dayData} isEditModalOpen={isEditModalOpen} />\r\n            <Button\r\n              onClick={closeModal}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"modal-container-open-buttonReturn\"\r\n            >\r\n              カレンダーに戻る\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#66bb6a\", marginBottom: \"25px\" }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            学習記録アプリ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport { DateContext } from \"./components/providers/DateProvider\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./styles/calendar_example.css\";\nimport \"./styles/modal.css\";\nimport \"./styles/App.css\";\nimport { useState, useContext } from \"react\";\n\nexport default function App() {\n  const [isModalOpen, setIsModalOpen] = useState(false); //モーダルの表示・非表示の状態管理\n  const { setTargetValue } = useContext(DateContext); //押下した日付の状態管理(YYYY-MM-DD)\n  /* 関数:日付押下時に実行する処理 */\n  const onChange = (nextValue) => {\n    const changeDate = moment(nextValue).format(\"YYYY-MM-DD\");\n    setTargetValue(changeDate);\n    setIsModalOpen(true); //モーダルオープン\n  };\n  return (\n    <div className=\"App\">\n      <div>\n        <Header />\n      </div>\n      <div className=\"calendar-container\">\n        <Calendar onChange={onChange} />\n      </div>\n      <div className=\"modal-container\">\n        <Modal isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport DateProviders from \"./components/providers/DateProvider\";\nimport { DayDataProvider } from \"./components/providers/DayDataProvider\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <DateProviders>\n      <DayDataProvider>\n        <App />\n      </DayDataProvider>\n    </DateProviders>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}